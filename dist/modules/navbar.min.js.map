{"version":3,"sources":["navbar.min.js","navbar/navbar.js"],"names":["angular","module","provider","defaults","this","activeClass","routeAttr","strict","$get","directive","$window","$location","$navbar","restrict","link","scope","element","attr","controller","options","copy","forEach","Object","keys","key","isDefined","$watch","path","newValue","oldValue","liElements","querySelectorAll","li","liElement","pattern","replace","regexp","RegExp","test","addClass","removeClass"],"mappings":"AAOA,YAEAA,SCAMC,OAAQ,4BDEXC,SAAS,UAAW,WAEnB,GCAEC,GAAQC,KAAUD,UDClBE,YAAa,SACbC,UAAW,mBACXC,QAAQ,EAGVH,MAAKI,KAAO,WCCZ,OAAIL,SAAWA,MDKhBM,UAAU,YAAa,UAAW,YAAa,UAAW,SAASC,EAASC,EAAWC,GAEtF,GCAIT,GAAIS,EAAUT,QDElB,QACEU,SAAU,IACVC,KAAM,SAAkBC,EAAOC,EAASC,EAAMC,GAG5C,GAAIC,GAAUnB,QAAQoB,KAAKjB,EAC3BH,SCAEqB,QAAOC,OAAUC,KAAApB,GAAA,SAAAqB,GDCdxB,QAAQyB,UAAUR,EAAKO,MAAOL,EAAQK,GAAOP,EAAKO,MAIvDT,EAAMW,OAAO,WAEX,MAAOf,GAAUgB,QAEhB,SCAKC,EAAUC,GDEhB,GCAIC,GAAUd,EAAM,GAAAe,iBAAU,MAAAZ,EAAAb,UAAA,IDE9BN,SCAMqB,QAASS,EAAW,SAASE,GAEjC,GAAGC,GAAYjC,QAAAgB,QAAWgB,GACxBE,EAAUD,EAAShB,KAAQE,EAAAb,WAAA6B,QAAA,IAAA,MDC1BhB,GCAIZ,SACL2B,EAAU,IAAAA,EAAY,IDExB,IAAIE,GAAS,GAAIC,QAAOH,EAAS,IAE9BE,GAAOE,KAAKV,GACbK,EAAUM,SAASpB,EAAQd,aAE3B4B,EAAUO,YAAYrB,EAAQd","file":"navbar.min.js","sourcesContent":["/**\n * angular-strap\n * @version v2.2.1 - 2015-11-27\n * @link http://mgcrea.github.io/angular-strap\n * @author Olivier Louvignes (olivier@mg-crea.com)\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n'use strict';\n\nangular.module('mgcrea.ngStrap.navbar', [])\n\n  .provider('$navbar', function() {\n\n    var defaults = this.defaults = {\n      activeClass: 'active',\n      routeAttr: 'data-match-route',\n      strict: false\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsNavbar', [\"$window\", \"$location\", \"$navbar\", function($window, $location, $navbar) {\n\n    var defaults = $navbar.defaults;\n\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = angular.copy(defaults);\n        angular.forEach(Object.keys(defaults), function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Watch for the $location\n        scope.$watch(function() {\n\n          return $location.path();\n\n        }, function(newValue, oldValue) {\n\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\n\n          angular.forEach(liElements, function(li) {\n\n            var liElement = angular.element(li);\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\n            if(options.strict) {\n              pattern = '^' + pattern + '$';\n            }\n            var regexp = new RegExp(pattern, 'i');\n\n            if(regexp.test(newValue)) {\n              liElement.addClass(options.activeClass);\n            } else {\n              liElement.removeClass(options.activeClass);\n            }\n\n          });\n\n        });\n\n      }\n\n    };\n\n  }]);\n","'use strict';\n\nangular.module('mgcrea.ngStrap.navbar', [])\n\n  .provider('$navbar', function() {\n\n    var defaults = this.defaults = {\n      activeClass: 'active',\n      routeAttr: 'data-match-route',\n      strict: false\n    };\n\n    this.$get = function() {\n      return {defaults: defaults};\n    };\n\n  })\n\n  .directive('bsNavbar', function($window, $location, $navbar) {\n\n    var defaults = $navbar.defaults;\n\n    return {\n      restrict: 'A',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = angular.copy(defaults);\n        angular.forEach(Object.keys(defaults), function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Watch for the $location\n        scope.$watch(function() {\n\n          return $location.path();\n\n        }, function(newValue, oldValue) {\n\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\n\n          angular.forEach(liElements, function(li) {\n\n            var liElement = angular.element(li);\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\n            if(options.strict) {\n              pattern = '^' + pattern + '$';\n            }\n            var regexp = new RegExp(pattern, 'i');\n\n            if(regexp.test(newValue)) {\n              liElement.addClass(options.activeClass);\n            } else {\n              liElement.removeClass(options.activeClass);\n            }\n\n          });\n\n        });\n\n      }\n\n    };\n\n  });\n"],"sourceRoot":"/source/"}