{"version":3,"sources":["alert.min.js","alert/alert.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","container","element","backdrop","keyboard","show","duration","type","dismissable","$get","$modal","$timeout","AlertFactory","config","$alert","options","extend","$scope","hide","directive","$window","$sce","requestAnimationFrame","setTimeout","restrict","scope","link","attr","transclusion","forEach","key","isDefined","hasOwnProperty","title","$observe","newValue","oldValue","trustAsHtml","bsAlert","$watch","isObject","content","alert","on","trigger","toggle","$on","destroy"],"mappings":"AAOA,YAMAA,SCAMC,OAAA,wBAAa,yBDEhBC,SCAG,SAAU,WDEZ,GCAEC,GAASC,KAAAD,UACTE,UAAU,UACVC,YAAU,QACVC,YAAM,QDCNC,UAAW,KCCXC,SAAU,uBACVC,WAAM,EACNC,QAAA,KDCAC,UAAU,EACVC,UAAU,ECCZC,MAAK,EAEHC,UAAS,EDCTC,MAAM,EACNC,aCAM,EDGRb,MCAIc,MAAI,SAAU,WAAe,SAAIC,EAAUC,GDE7C,QCAEC,GAAgBC,GDEhB,GAAIC,MCGFC,EAAOxB,QAAOyB,UAAetB,EAAAmB,EDE/BC,GAASJ,EAAOK,GCGhBD,EAAGG,OAAQT,cAAUO,EAAAP,YACnBO,EAAOR,ODCPO,ECAEG,OAAAV,KAAAQ,EAAAR,KDIJ,IAAIF,GAAOS,EAAOT,IAUlB,OATGU,GAAQT,WACTQ,EAAOT,KAAO,WCChBA,IDCIM,EAAS,WACPG,EAAOI,QACa,IAAnBH,EAAQT,YAIRQ,EAIT,MAAOF,OAMVO,UCAS,WAAS,UAAS,OAAO,SAAe,SAAAC,EAAcC,EAAAP,GDElCM,EAAQE,uBAAyBF,EAAQG,UAErE,QACEC,SCAO,MDCPC,OAAO,EACPC,KAAM,SAAkBD,EAAOvB,EAASyB,EAAMC,GCG5C,GAAIb,IAAOU,MAAAA,EAAevB,QAASA,EAAAG,MAAA,EDCnCd,SCAQsC,SAAQ,WAAA,YAAA,WAAA,OAAA,YAAA,YAAA,WAAA,eAAA,SAAAC,GDCXvC,QAAQwC,UAAUJ,EAAKG,MAAOf,EAAQe,GAAOH,EAAKG,MCKnDL,EAAMO,eAAY,WDCpBP,EAAMQ,MAAQ,ICIhB1C,QAAKsC,SAAW,QAAM,UAAY,QAAS,SAASC,GAClDH,EAAGG,IAAQH,EAAAO,SAASJ,EAAW,SAAAK,EAAAC,GAC7BX,EAAAK,GAAQT,EAAOgB,YAAOF,ODK1BR,EAAKW,SAAWb,EAAMc,OAAOZ,EAAKW,QAAS,SAASH,EAAUC,GACzD7C,QAAQiD,SAASL,GCClB5C,QAAQyB,OAAOS,EAAAU,GDEfV,EAAMgB,QAAUN,IAEjB,EAGH,ICAEO,GAAI5B,EAAaC,EDGnBb,GAAQyC,GAAGhB,EAAKiB,SAAW,QAASF,EAAMG,QAG1CpB,EAAMqB,IAAI,WAAY,WAChBJ,GAAOA,EAAMK,UACjBhC,EAAU,KCCpB2B,EAAA","file":"alert.min.js","sourcesContent":[null,"'use strict';\n\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function($window, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')){\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}