{"version":3,"sources":["select.min.js","select/select.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","allText","noneText","maxLength","maxLengthHtml","iconCheckmark","$get","$window","$document","$rootScope","$tooltip","$timeout","SelectFactory","element","controller","config","$select","options","extend","toString","match","scope","$scope","$matches","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$allText","$noneText","$activate","index","$$postDigest","activate","evt","select","$isVisible","$isActive","$selectAll","i","length","$selectNone","update","matches","$updateActiveIndex","splice","indexOf","push","value","$apply","$setViewValue","map","hide","$emit","$modelValue","isArray","$getIndex","minLength","$viewValue","l","$onMouseDown","preventDefault","stopPropagation","isTouch","targetEl","target","triggerHandler","$onKeyDown","test","keyCode","isUndefined","$digest","_show","show","$element","addClass","on","_hide","off","isNative","document","body","navigator","userAgent","directive","$parse","$q","$parseOptions","restrict","require","link","attr","forEach","key","isDefined","nodeName","toLowerCase","inputEl","css","after","parsedOptions","bsOptions","watchedOptions","$match","replace","trim","$watch","newValue","oldValue","valuesFn","then","values","$render","ngModel","selected","label","filter","join","$isEmpty","$on","destroy"],"mappings":"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","file":"select.min.js","sourcesContent":[null,"'use strict';\n\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\n\n  .provider('$select', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'select',\n      prefixEvent: '$select',\n      placement: 'bottom-left',\n      template: 'select/select.tpl.html',\n      trigger: 'focus',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0,\n      multiple: false,\n      allNoneButtons: false,\n      sort: true,\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\n      placeholder: 'Choose among the following...',\n      allText: 'All',\n      noneText: 'None',\n      maxLength: 3,\n      maxLengthHtml: 'selected',\n      iconCheckmark: 'glyphicon glyphicon-ok'\n    };\n\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\n      var isTouch = ('createTouch' in $window.document) && isNative;\n\n      function SelectFactory(element, controller, config) {\n\n        var $select = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        // parse sort option value to support attribute as string\n        // when binded to interpolated value\n        options.sort = options.sort.toString().match(/true|1/i);\n\n        $select = $tooltip(element, options);\n        var scope = $select.$scope;\n\n        scope.$matches = [];\n        scope.$activeIndex = -1;\n        scope.$isMultiple = options.multiple;\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\n        scope.$iconCheckmark = options.iconCheckmark;\n        scope.$allText = options.allText;\n        scope.$noneText = options.noneText;\n\n        scope.$activate = function(index) {\n          scope.$$postDigest(function() {\n            $select.activate(index);\n          });\n        };\n\n        scope.$select = function(index, evt) {\n          scope.$$postDigest(function() {\n            $select.select(index);\n          });\n        };\n\n        scope.$isVisible = function() {\n          return $select.$isVisible();\n        };\n\n        scope.$isActive = function(index) {\n          return $select.$isActive(index);\n        };\n\n        scope.$selectAll = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (!scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        scope.$selectNone = function () {\n          for (var i = 0; i < scope.$matches.length; i++) {\n            if (scope.$isActive(i)) {\n              scope.$select(i);\n            }\n          }\n        };\n\n        // Public methods\n\n        $select.update = function(matches) {\n          scope.$matches = matches;\n          $select.$updateActiveIndex();\n        };\n\n        $select.activate = function(index) {\n          if(options.multiple) {\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\n            if(options.sort) scope.$activeIndex.sort();\n          } else {\n            scope.$activeIndex = index;\n          }\n          return scope.$activeIndex;\n        };\n\n        $select.select = function(index) {\n          var value = scope.$matches[index].value;\n          scope.$apply(function() {\n            $select.activate(index);\n            if(options.multiple) {\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\n                return scope.$matches[index].value;\n              }));\n            } else {\n              controller.$setViewValue(value);\n              // Hide if single select\n              $select.hide();\n            }\n          });\n          // Emit event\n          scope.$emit(options.prefixEvent + '.select', value, index, $select);\n        };\n\n        // Protected methods\n\n        $select.$updateActiveIndex = function() {\n          if(controller.$modelValue && scope.$matches.length) {\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\n                return $select.$getIndex(value);\n              });\n            } else {\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\n            }\n          } else if(scope.$activeIndex >= scope.$matches.length) {\n            scope.$activeIndex = options.multiple ? [] : 0;\n          }\n        };\n\n        $select.$isVisible = function() {\n          if(!options.minLength || !controller) {\n            return scope.$matches.length;\n          }\n          // minLength support\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\n        };\n\n        $select.$isActive = function(index) {\n          if(options.multiple) {\n            return scope.$activeIndex.indexOf(index) !== -1;\n          } else {\n            return scope.$activeIndex === index;\n          }\n        };\n\n        $select.$getIndex = function(value) {\n          var l = scope.$matches.length, i = l;\n          if(!l) return;\n          for(i = l; i--;) {\n            if(scope.$matches[i].value === value) break;\n          }\n          if(i < 0) return;\n          return i;\n        };\n\n        $select.$onMouseDown = function(evt) {\n          // Prevent blur on mousedown on .dropdown-menu\n          evt.preventDefault();\n          evt.stopPropagation();\n          // Emulate click for mobile devices\n          if(isTouch) {\n            var targetEl = angular.element(evt.target);\n            targetEl.triggerHandler('click');\n          }\n        };\n\n        $select.$onKeyDown = function(evt) {\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // release focus on tab\n          if (options.multiple && evt.keyCode === 9) {\n            return $select.hide();\n          }\n\n          // Select with enter\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\n            return $select.select(scope.$activeIndex);\n          }\n\n          if (!options.multiple) {\n            // Navigate with keyboard\n            if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\n            else if(evt.keyCode === 38 && scope.$activeIndex < 0) scope.$activeIndex = scope.$matches.length - 1;\n            else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\n            else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\n            scope.$digest();\n          }\n        };\n\n        // Overrides\n\n        var _show = $select.show;\n        $select.show = function() {\n          _show();\n          if(options.multiple) {\n            $select.$element.addClass('select-multiple');\n          }\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n            if(options.keyboard) {\n              element.on('keydown', $select.$onKeyDown);\n            }\n          }, 0, false);\n        };\n\n        var _hide = $select.hide;\n        $select.hide = function() {\n          if(!options.multiple && !controller.$modelValue) {\n            scope.$activeIndex = -1;\n          } \n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\n          if(options.keyboard) {\n            element.off('keydown', $select.$onKeyDown);\n          }\n          _hide(true);\n        };\n\n        return $select;\n\n      }\n\n      SelectFactory.defaults = defaults;\n      return SelectFactory;\n\n    };\n\n  })\n\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\n\n    var defaults = $select.defaults;\n\n    return {\n      restrict: 'EAC',\n      require: 'ngModel',\n      link: function postLink(scope, element, attr, controller) {\n\n        // Directive options\n        var options = {scope: scope, placeholder: defaults.placeholder};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'allText', 'noneText', 'iconCheckmark', 'autoClose', 'id', 'sort', 'caretHtml'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Add support for select markup\n        if(element[0].nodeName.toLowerCase() === 'select') {\n          var inputEl = element;\n          inputEl.css('display', 'none');\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\n          inputEl.after(element);\n        }\n\n        // Build proper bsOptions\n        var parsedOptions = $parseOptions(attr.bsOptions);\n\n        // Initialize select\n        var select = $select(element, controller, options);\n\n        // Watch bsOptions values before filtering for changes\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\n        scope.$watch(watchedOptions, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\n          parsedOptions.valuesFn(scope, controller)\n          .then(function(values) {\n            select.update(values);\n            controller.$render();\n          });\n        }, true);\n\n        // Watch model for changes\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\n          select.$updateActiveIndex();\n          controller.$render();\n        }, true);\n\n        // Model rendering in view\n        controller.$render = function () {\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\n          var selected, index;\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\n            selected = controller.$modelValue.map(function(value) {\n              index = select.$getIndex(value);\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n            }).filter(angular.isDefined);\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\n            } else {\n              selected = selected.join(', ');\n            }\n          } else {\n            index = select.$getIndex(controller.$modelValue);\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\n          }\n          element.html((selected ? selected : options.placeholder) + (options.caretHtml ? options.caretHtml : defaults.caretHtml));\n        };\n\n        if(options.multiple){\n          controller.$isEmpty = function(value){\n            return !value || value.length === 0;\n          };\n        }\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (select) select.destroy();\n          options = null;\n          select = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}