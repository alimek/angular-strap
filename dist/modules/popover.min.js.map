{"version":3,"sources":["popover.min.js","popover/popover.js"],"names":["angular","module","provider","defaults","this","animation","customClass","container","target","placement","template","contentTemplate","trigger","keyboard","html","title","content","delay","autoClose","$get","$tooltip","PopoverFactory","element","config","options","extend","$popover","$scope","directive","$window","$sce","requestAnimationFrame","setTimeout","restrict","scope","link","attr","forEach","key","isDefined","$observe","newValue","oldValue","trustAsHtml","popover","$applyPlacement","bsPopover","$watch","isObject","bsShow","isString","match","show","hide","viewport","setViewport","$on","destroy"],"mappings":"AAOA,YAEAA,SCAMC,OAAA,0BAAW,2BDEdC,SCAG,WAAW,WDEb,GCAEC,GAAAC,KAAiBD,UACjBE,UAAS,UACTC,YAAU,GACVC,WAAM,EACNC,QAAO,EACPC,UAAS,QACTC,SAAO,2BACPC,iBAAW,EDCXC,QAAS,QACTC,UAAU,ECCZC,MAAK,EDCHC,MAAO,GCCPC,QAAS,GDCTC,MAAO,EACPC,WAAW,EAGbd,MCAIe,MAAI,WAAW,SAASC,GDE1B,QAASC,GAAeC,EAASC,GAG/B,GAAIC,GAAUxB,QAAQyB,UAAWtB,EAAUoB,GCE3CG,EAAON,EAAAE,EAAAE,EDOP,OAJGA,GAAQR,UCCbU,EAAOC,OAAAX,QAAAQ,EAAAR,SDGEU,EAIT,MAAOL,OAMVO,UCAS,aAAS,UAAgB,OAAS,WAAM,SAAAC,EAAAC,EAAAJ,GDEhD,GAAIK,GAAwBF,EAAQE,uBAAyBF,EAAQG,UAErE,QACEC,SCAO,MDCPC,OAAO,EACPC,KAAM,SAAkBD,EAAOZ,EAASc,GAGtC,GCAEZ,IAAaU,MAAKA,EDCpBlC,SCAIqC,SAAa,WAAK,kBAAY,YAAA,YAAA,SAAA,QAAA,UAAA,WAAA,OAAA,YAAA,cAAA,YAAA,MAAA,SAAAC,GAC9BtC,QAAQuC,UAAUH,EAAAE,MAAad,EAAAc,GAAAF,EAAAE,MDInCtC,QAAQqC,SAAS,QAAS,WAAY,SAASC,GAC7CF,EAAKE,IAAQF,EAAKI,SAASF,EAAK,SAASG,EAAUC,GACjDR,EAAMI,GAAOR,EAAKa,YAAYF,GCClCzC,QAAKuC,UAAaG,IAAaX,EAAyB,WACnDa,GAAQA,EAASC,wBDMtBT,ECAIU,WAAWZ,EAAQa,OAAAX,EAAAU,UAAA,SAAAL,EAAAC,GDClB1C,QAAQgD,SAASP,GCCnBzC,QAAAyB,OAAAS,EAAAO,GDECP,EAAMlB,QAAUyB,ECElBzC,QAAIuC,UAAYG,IAAQX,EAAqB,WAC7Ca,GAAWA,EAASC,sBDEnB,GCGHT,EAAKa,QAAAf,EAAYa,OAAMX,EAAOa,OAAK,SAAUR,EAAUC,GACjDE,GAAY5C,QAAQuC,UAAUE,KAClCzC,QAAQkD,SAAYT,KAAAA,IAAAA,EAAAU,MAAA,wBDCpBV,KAAa,EAAOG,EAAQQ,OAASR,EAAQS,UAI/CjB,EAAKkB,UAAYpB,EAAMa,OAAOX,EAAKkB,SAAU,SAAUb,GACjDG,GAAY5C,QAAQuC,UAAUE,ICCpCG,EAAUW,YAAYd,IDItB,IAAIG,GAAUlB,EAASJ,EAASE,EAGhCU,GAAMsB,IAAI,WAAY,WAChBZ,GAASA,EAAQa,UACrBjC,EAAU,KCCpBoB,EAAA","file":"popover.min.js","sourcesContent":[null,"'use strict';\n\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$popover', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      customClass: '',\n      container: false,\n      target: false,\n      placement: 'right',\n      template: 'popover/popover.tpl.html',\n      contentTemplate: false,\n      trigger: 'click',\n      keyboard: true,\n      html: false,\n      title: '',\n      content: '',\n      delay: 0,\n      autoClose: false\n    };\n\n    this.$get = function($tooltip) {\n\n      function PopoverFactory(element, config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        var $popover = $tooltip(element, options);\n\n        // Support scope as string options [/*title, */content]\n        if(options.content) {\n          $popover.$scope.content = options.content;\n        }\n\n        return $popover;\n\n      }\n\n      return PopoverFactory;\n\n    };\n\n  })\n\n  .directive('bsPopover', function($window, $sce, $popover) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass', 'autoClose', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\n              popover && popover.$applyPlacement();\n            });\n          });\n        });\n\n        // Support scope as an object\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\n            popover && popover.$applyPlacement();\n          });\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(popover),?/i);\n          newValue === true ? popover.show() : popover.hide();\n        });\n        \n        // Viewport support\n        attr.viewport && scope.$watch(attr.viewport, function (newValue) {\n          if(!popover || !angular.isDefined(newValue)) return;\n          popover.setViewport(newValue);\n        });\n\n        // Initialize popover\n        var popover = $popover(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (popover) popover.destroy();\n          options = null;\n          popover = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}