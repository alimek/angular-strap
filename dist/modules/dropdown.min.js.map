{"version":3,"sources":["dropdown.min.js","dropdown/dropdown.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","$get","$window","$rootScope","$tooltip","$timeout","DropdownFactory","element","config","onBodyClick","evt","target","$dropdown","hide","options","extend","$scope","scope","$new","parentEl","parent","$onKeyDown","test","keyCode","preventDefault","stopPropagation","items","$element","querySelectorAll","length","index","forEach","el","i","matchesSelector","call","isUndefined","eq","focus","show","on","bodyEl","hasClass","addClass","$isShown","off","removeClass","destroy","document","body","Element","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","directive","$sce","restrict","link","attr","transclusion","key","isDefined","bsDropdown","$watch","newValue","oldValue","content","bsShow","dropdown","isString","match","$on"],"mappings":"AAOA,YAEAA,SCAMC,OAAA,2BAAa,2BDEhBC,SCAG,YAAU,WDEZ,GCAEC,GAAWC,KAAAD,UACXE,UAAU,UACVC,YAAM,WACNC,YAAO,WDCPC,UAAW,cACXC,SAAU,6BCCZC,QAAK,QDCHC,WAAW,ECCXC,UAAI,EACJC,MAAI,EDCJC,MAAO,EAGTV,MCAIW,MAAI,UAAY,aAAA,WAAA,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GDKlB,QAASC,GAAgBC,EAASC,GAiEhC,QAASC,GAAYC,GACnB,MAAGA,GAAIC,SAAWJ,EAAQ,GCCvBG,EAAAC,SAAAJ,EAAA,IAAAK,EAAAC,ODDH,OChEF,CAAA,GAAID,MDGAE,EAAU5B,QAAQ6B,UAAW1B,EAAUmB,ECCjCI,GAAAI,OAAaF,EAAcG,OAAAH,EAAAG,MAAAC,QAAAf,EAAAe,ODErCN,ECAMR,EAAAG,EAAAO,EDCN,ICAEK,GAAIZ,EAAAa,QDINR,GCAMS,WAAc,SAAAX,GAClB,GAAI,UAAAY,KAAAZ,EAAAa,SAAJ,CACAb,EAAAc,iBDCAd,ECAEe,iBDGF,IAAIC,GAAQxC,QAAQqB,QAAQK,EAAUe,SAAS,GAAGC,iBAAiB,sBCCnE,IAAGF,EAAIG,OAAP,CDCA,GAAIC,EACJ5C,SCAQ6C,QAAQL,EAAA,SAAYM,EAAQC,GACpCC,GAAmBA,EAAAC,KAAAH,EAAA,YAAAF,EAAAG,KDIA,KAAhBvB,EAAIa,SAAkBO,EAAQ,EAAGA,IACZ,KAAhBpB,EAAIa,SAAkBO,EAAQJ,EAAMG,OAAS,EAAGC,ICCtD5C,QAAOkD,YAAUN,KAAAA,EAAA,GACrBJ,EAAAW,GAAUP,GAAO,GAAAQ,UDMjB,ICAIC,GAAO3B,EAAG2B,IDCd3B,GCAQ2B,KAAA,WACNA,IAGFlC,EAAW,WACXS,EAAUhB,UAAOc,EAAWe,SAAAa,GAAA,UAAA5B,EAAAS,YAC1BoB,EAAID,GAAA,QAAU/B,IACd,GAAA,GACAU,EAAOuB,SAAI,aAASvB,EAAAwB,SAAA,QDGtB,IAAI9B,GAAOD,EAAUC,IACrBD,GAAUC,KAAO,WCCbD,EAAUgC,WACd9B,EAAUhB,UAAUc,EAAWe,SAAAkB,IAAA,UAAAjC,EAAAS,YAC7BoB,EAAOI,IAAI,QAASpC,GACpBU,EAAAuB,SAAA,aAAAvB,EAAA2B,YAAA,QDCAjC,KAGF,IAAIkC,GAAUnC,EAAUmC,OAaxB,OCZAnC,GAASmC,QAAA,WACPN,EAAOI,IAAA,QAAWpC,GAClBsC,KDUKnC,EAzET,GAAI6B,GAASvD,QAAQqB,QAAQL,EAAQ8C,SAASC,MCC5Cf,EAAcgB,QAAQC,UAAWjB,iBAAUgB,QAAAC,UAAAC,uBAAAF,QAAAC,UAAAE,oBAAAH,QAAAC,UAAAG,mBAAAJ,QAAAC,UAAAI,gBD4E7C,OAAOjD,OAMVkD,UAAU,cAAe,UAAW,OAAQ,YAAa,SAAStD,EAASuD,EAAM7C,GAEhF,OACE8C,SCAO,MDCPzC,OAAO,EACP0C,KAAM,SAAkB1C,EAAOV,EAASqD,EAAMC,GAG5C,GCAE/C,IAAMG,MAAUA,EDClB/B,SCAG6C,SAAA,YAAA,YAAA,QAAA,UAAA,WAAA,OAAA,YAAA,WAAA,MAAA,SAAA+B,GDCE5E,QAAQ6E,UAAUH,EAAKE,MAAOhD,EAAQgD,GAAOF,EAAKE,MAIvDF,ECAKI,YAAQ/C,EAASgD,OAAAL,EAAWI,WAAa,SAASE,EAAMC,GAC3DlD,EAAAmD,QAAaF,IDCZ,GCGHN,EAAIS,QAAWpD,EAAAgD,OAAUL,EAAAS,OAAS,SAAAH,EAAAC,GDC5BG,GAAapF,QAAQ6E,UAAUG,KAChChF,QAAQqF,SAASL,KAAWA,IAAaA,EAASM,MAAM,yBCC7DN,KAAU,EAAYI,EAAA/B,OAAW+B,EAAAzD,SDIjC,IAAIyD,GAAW1D,EAAUL,EAASO,EAGlCG,GAAMwD,IAAI,WAAY,WAChBH,GAAUA,EAASvB,UACvBjC,EAAU,KCCpBwD,EAAA","file":"dropdown.min.js","sourcesContent":[null,"'use strict';\n\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\n\n  .provider('$dropdown', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'dropdown',\n      prefixEvent: 'dropdown',\n      placement: 'bottom-left',\n      template: 'dropdown/dropdown.tpl.html',\n      trigger: 'click',\n      container: false,\n      keyboard: true,\n      html: false,\n      delay: 0\n    };\n\n    this.$get = function($window, $rootScope, $tooltip, $timeout) {\n\n      var bodyEl = angular.element($window.document.body);\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\n\n      function DropdownFactory(element, config) {\n\n        var $dropdown = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        $dropdown = $tooltip(element, options);\n        var parentEl = element.parent();\n\n        // Protected methods\n\n        $dropdown.$onKeyDown = function(evt) {\n          if (!/(38|40)/.test(evt.keyCode)) return;\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          // Retrieve focused index\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\n          if(!items.length) return;\n          var index;\n          angular.forEach(items, function(el, i) {\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\n          });\n\n          // Navigate with keyboard\n          if(evt.keyCode === 38 && index > 0) index--;\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\n          else if(angular.isUndefined(index)) index = 0;\n          items.eq(index)[0].focus();\n\n        };\n\n        // Overrides\n\n        var show = $dropdown.show;\n        $dropdown.show = function() {\n          show();\n          // use timeout to hookup the events to prevent\n          // event bubbling from being processed imediately.\n          $timeout(function() {\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\n            bodyEl.on('click', onBodyClick);\n          }, 0, false);\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\n        };\n\n        var hide = $dropdown.hide;\n        $dropdown.hide = function() {\n          if(!$dropdown.$isShown) return;\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\n          bodyEl.off('click', onBodyClick);\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\n          hide();\n        };\n\n        var destroy = $dropdown.destroy;\n        $dropdown.destroy = function() {\n          bodyEl.off('click', onBodyClick);\n          destroy();\n        };\n\n        // Private functions\n\n        function onBodyClick(evt) {\n          if(evt.target === element[0]) return;\n          return evt.target !== element[0] && $dropdown.hide();\n        }\n\n        return $dropdown;\n\n      }\n\n      return DropdownFactory;\n\n    };\n\n  })\n\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope};\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'id'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as an object\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\n          scope.content = newValue;\n        }, true);\n\n        // Visibility binding support\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\n          if(!dropdown || !angular.isDefined(newValue)) return;\n          if(angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\n          newValue === true ? dropdown.show() : dropdown.hide();\n        });\n\n        // Initialize dropdown\n        var dropdown = $dropdown(element, options);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (dropdown) dropdown.destroy();\n          options = null;\n          dropdown = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}